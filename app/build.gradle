apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def config = rootProject.ext
android {
    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        applicationId "com.navigationdemo"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        lintOptions {
            // In general we want to check for problems. Any time, all the time.
            checkReleaseBuilds true
            // And fail the build if we have errors
            abortOnError true

            // Level depends on the type AccountModel the job
            /// Fail the build if buildGreenhouseRelease target is called and we have missing translations!
            project.ext.isRelease ? error("MissingTranslation") : warning("MissingTranslation")
            // Error level things
            /// Hardcoded text should not exist or should have case by case exceptions
            error "HardcodedText"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$config.kotlinVersion"
    implementation "com.android.support:appcompat-v7:$config.materialVersion"
    implementation "com.android.support:design:$config.materialVersion"

//   Dimension manage
    implementation "com.intuit.sdp:sdp-android:$config.sdp"
    implementation "com.intuit.ssp:ssp-android:$config.sdp"

//    Navigation dependency
    implementation("android.arch.navigation:navigation-fragment:$config.navigationVersion") {
        exclude group: 'com.android.support'
    }
    implementation("android.arch.navigation:navigation-ui:$config.navigationVersion") {
        exclude group: 'com.android.support'
    }

//    Life cycle dependency
    implementation "android.arch.lifecycle:extensions:$config.lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$config.lifecycleVersion"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
apply plugin: "androidx.navigation.safeargs"
